ca65 V2.18 - Ubuntu 2.18-1
Main file   : game.s
Current file: game.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.18 - Ubuntu 2.18-1
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.import		_printf
000000r 1               	.export		_start_benchmark
000000r 1               	.export		_ticks
000000r 1               	.export		_end_benchmark
000000r 1               	.export		_place_enemy
000000r 1               	.export		_set_entities
000000r 1               	.export		_get_entity_tile
000000r 1               	.export		_draw_entity
000000r 1               	.export		_damage_enemy
000000r 1               	.export		_one_frame
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               L0042:
000000r 1  25 75 20 74  	.byte	$25,$75,$20,$74,$69,$63,$6B,$73,$00
000004r 1  69 63 6B 73  
000008r 1  00           
000009r 1               
000009r 1               .segment	"BSS"
000000r 1               
000000r 1               _ticks:
000000r 1  00 00        	.res	2,$00
000002r 1               
000002r 1               ; ---------------------------------------------------------------
000002r 1               ; void __near__ start_benchmark (void)
000002r 1               ; ---------------------------------------------------------------
000002r 1               
000002r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_start_benchmark: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               ;
000000r 1               ; asm("SEI");
000000r 1               ;
000000r 1  78           	sei
000001r 1               ;
000001r 1               ; asm("lda $14");
000001r 1               ;
000001r 1  A5 14        	lda     $14
000003r 1               ;
000003r 1               ; asm("cmp $14");
000003r 1               ;
000003r 1  C5 14        L0025:	cmp     $14
000005r 1               ;
000005r 1               ; asm("beq %g", wvb);
000005r 1               ;
000005r 1  F0 FC        	beq     L0025
000007r 1               ;
000007r 1               ; asm("lda #0");
000007r 1               ;
000007r 1  A9 00        	lda     #0
000009r 1               ;
000009r 1               ; asm("sta $13");
000009r 1               ;
000009r 1  85 13        	sta     $13
00000Br 1               ;
00000Br 1               ; asm("sta $14");
00000Br 1               ;
00000Br 1  85 14        	sta     $14
00000Dr 1               ;
00000Dr 1               ; asm("CLI");
00000Dr 1               ;
00000Dr 1  58           	cli
00000Er 1               ;
00000Er 1               ; }
00000Er 1               ;
00000Er 1  60           	rts
00000Fr 1               
00000Fr 1               .endproc
00000Fr 1               
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               ; void __near__ end_benchmark (void)
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               .proc	_end_benchmark: near
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               ;
00000Fr 1               ; asm("SEI");
00000Fr 1               ;
00000Fr 1  78           	sei
000010r 1               ;
000010r 1               ; asm("lda $14");
000010r 1               ;
000010r 1  A5 14        	lda     $14
000012r 1               ;
000012r 1               ; asm("sta %v", ticks);
000012r 1               ;
000012r 1  8D rr rr     	sta     _ticks
000015r 1               ;
000015r 1               ; asm("lda $13");
000015r 1               ;
000015r 1  A5 13        	lda     $13
000017r 1               ;
000017r 1               ; asm("sta %v+1", ticks);
000017r 1               ;
000017r 1  8D rr rr     	sta     _ticks+1
00001Ar 1               ;
00001Ar 1               ; asm("CLI");
00001Ar 1               ;
00001Ar 1  58           	cli
00001Br 1               ;
00001Br 1               ; printf("%u ticks", ticks);
00001Br 1               ;
00001Br 1  A9 rr        	lda     #<(L0042)
00001Dr 1  A2 rr        	ldx     #>(L0042)
00001Fr 1  20 rr rr     	jsr     pushax
000022r 1  AD rr rr     	lda     _ticks
000025r 1  AE rr rr     	ldx     _ticks+1
000028r 1  20 rr rr     	jsr     pushax
00002Br 1  A0 04        	ldy     #$04
00002Dr 1  4C rr rr     	jmp     _printf
000030r 1               
000030r 1               .endproc
000030r 1               
000030r 1               ; ---------------------------------------------------------------
000030r 1               ; void __near__ place_enemy (__near__ struct s_entity *, int, int)
000030r 1               ; ---------------------------------------------------------------
000030r 1               
000030r 1               .segment	"CODE"
000030r 1               
000030r 1               .proc	_place_enemy: near
000030r 1               
000030r 1               .segment	"CODE"
000030r 1               
000030r 1               ;
000030r 1               ; {
000030r 1               ;
000030r 1  20 rr rr     	jsr     pushax
000033r 1               ;
000033r 1               ; e_ptr->x = x;
000033r 1               ;
000033r 1  A0 05        	ldy     #$05
000035r 1  B1 rr        	lda     (sp),y
000037r 1  85 rr        	sta     ptr1+1
000039r 1  88           	dey
00003Ar 1  B1 rr        	lda     (sp),y
00003Cr 1  85 rr        	sta     ptr1
00003Er 1  88           	dey
00003Fr 1  B1 rr        	lda     (sp),y
000041r 1  AA           	tax
000042r 1  88           	dey
000043r 1  B1 rr        	lda     (sp),y
000045r 1  A0 00        	ldy     #$00
000047r 1  91 rr        	sta     (ptr1),y
000049r 1  C8           	iny
00004Ar 1  8A           	txa
00004Br 1  91 rr        	sta     (ptr1),y
00004Dr 1               ;
00004Dr 1               ; e_ptr->y = y;
00004Dr 1               ;
00004Dr 1  A0 05        	ldy     #$05
00004Fr 1  B1 rr        	lda     (sp),y
000051r 1  85 rr        	sta     ptr1+1
000053r 1  88           	dey
000054r 1  B1 rr        	lda     (sp),y
000056r 1  85 rr        	sta     ptr1
000058r 1  A0 01        	ldy     #$01
00005Ar 1  B1 rr        	lda     (sp),y
00005Cr 1  AA           	tax
00005Dr 1  88           	dey
00005Er 1  B1 rr        	lda     (sp),y
000060r 1  A0 02        	ldy     #$02
000062r 1  91 rr        	sta     (ptr1),y
000064r 1  C8           	iny
000065r 1  8A           	txa
000066r 1  91 rr        	sta     (ptr1),y
000068r 1               ;
000068r 1               ; }
000068r 1               ;
000068r 1  4C rr rr     	jmp     incsp6
00006Br 1               
00006Br 1               .endproc
00006Br 1               
00006Br 1               ; ---------------------------------------------------------------
00006Br 1               ; void __near__ set_entities (__near__ struct s_game_state *)
00006Br 1               ; ---------------------------------------------------------------
00006Br 1               
00006Br 1               .segment	"CODE"
00006Br 1               
00006Br 1               .proc	_set_entities: near
00006Br 1               
00006Br 1               .segment	"BSS"
000002r 1               
000002r 1               L004C:
000002r 1  00 00        	.res	2,$00
000004r 1               L004D:
000004r 1  00 00        	.res	2,$00
000006r 1               
000006r 1               .segment	"CODE"
00006Br 1               
00006Br 1               ;
00006Br 1               ; {
00006Br 1               ;
00006Br 1  20 rr rr     	jsr     pushax
00006Er 1               ;
00006Er 1               ; for (index = 0; index < _countof(game_state->enemies); index++)
00006Er 1               ;
00006Er 1  A9 00        	lda     #$00
000070r 1  8D rr rr     	sta     L004C
000073r 1  8D rr rr     	sta     L004C+1
000076r 1  AD rr rr     L004E:	lda     L004C+1
000079r 1  C9 00        	cmp     #$00
00007Br 1  D0 05        	bne     L0059
00007Dr 1  AD rr rr     	lda     L004C
000080r 1  C9 1E        	cmp     #$1E
000082r 1  90 03 4C rr  L0059:	jcs     L004F
000086r 1  rr           
000087r 1               ;
000087r 1               ; e = &game_state->enemies[index];
000087r 1               ;
000087r 1  AD rr rr     	lda     L004C
00008Ar 1  AE rr rr     	ldx     L004C+1
00008Dr 1  20 rr rr     	jsr     aslax3
000090r 1  18           	clc
000091r 1  A0 00        	ldy     #$00
000093r 1  71 rr        	adc     (sp),y
000095r 1  8D rr rr     	sta     L004D
000098r 1  8A           	txa
000099r 1  C8           	iny
00009Ar 1  71 rr        	adc     (sp),y
00009Cr 1  8D rr rr     	sta     L004D+1
00009Fr 1               ;
00009Fr 1               ; place_enemy( e, (index*5) % SCREEN_SIZE_X, index / 2 + 9);
00009Fr 1               ;
00009Fr 1  20 rr rr     	jsr     decsp4
0000A2r 1  AD rr rr     	lda     L004D
0000A5r 1  C8           	iny
0000A6r 1  91 rr        	sta     (sp),y
0000A8r 1  C8           	iny
0000A9r 1  AD rr rr     	lda     L004D+1
0000ACr 1  91 rr        	sta     (sp),y
0000AEr 1  AD rr rr     	lda     L004C
0000B1r 1  AE rr rr     	ldx     L004C+1
0000B4r 1  20 rr rr     	jsr     mulax5
0000B7r 1  20 rr rr     	jsr     pushax
0000BAr 1  A2 00        	ldx     #$00
0000BCr 1  A9 28        	lda     #$28
0000BEr 1  20 rr rr     	jsr     tosmoda0
0000C1r 1  A0 00        	ldy     #$00
0000C3r 1  91 rr        	sta     (sp),y
0000C5r 1  C8           	iny
0000C6r 1  8A           	txa
0000C7r 1  91 rr        	sta     (sp),y
0000C9r 1  AD rr rr     	lda     L004C
0000CCr 1  AE rr rr     	ldx     L004C+1
0000CFr 1  20 rr rr     	jsr     asrax1
0000D2r 1  18           	clc
0000D3r 1  69 09        	adc     #$09
0000D5r 1  90 01        	bcc     L0064
0000D7r 1  E8           	inx
0000D8r 1  20 rr rr     L0064:	jsr     _place_enemy
0000DBr 1               ;
0000DBr 1               ; e->hp = 99;
0000DBr 1               ;
0000DBr 1  AD rr rr     	lda     L004D+1
0000DEr 1  85 rr        	sta     ptr1+1
0000E0r 1  AD rr rr     	lda     L004D
0000E3r 1  85 rr        	sta     ptr1
0000E5r 1  A9 63        	lda     #$63
0000E7r 1  A0 04        	ldy     #$04
0000E9r 1  91 rr        	sta     (ptr1),y
0000EBr 1  C8           	iny
0000ECr 1  A9 00        	lda     #$00
0000EEr 1  91 rr        	sta     (ptr1),y
0000F0r 1               ;
0000F0r 1               ; e->type = ENTITY_ENEMY;
0000F0r 1               ;
0000F0r 1  AD rr rr     	lda     L004D+1
0000F3r 1  85 rr        	sta     ptr1+1
0000F5r 1  AD rr rr     	lda     L004D
0000F8r 1  85 rr        	sta     ptr1
0000FAr 1  A9 02        	lda     #$02
0000FCr 1  C8           	iny
0000FDr 1  91 rr        	sta     (ptr1),y
0000FFr 1  C8           	iny
000100r 1  A9 00        	lda     #$00
000102r 1  91 rr        	sta     (ptr1),y
000104r 1               ;
000104r 1               ; for (index = 0; index < _countof(game_state->enemies); index++)
000104r 1               ;
000104r 1  AD rr rr     	lda     L004C
000107r 1  AE rr rr     	ldx     L004C+1
00010Ar 1  85 rr        	sta     regsave
00010Cr 1  86 rr        	stx     regsave+1
00010Er 1  18           	clc
00010Fr 1  69 01        	adc     #$01
000111r 1  90 01        	bcc     L005B
000113r 1  E8           	inx
000114r 1  8D rr rr     L005B:	sta     L004C
000117r 1  8E rr rr     	stx     L004C+1
00011Ar 1  4C rr rr     	jmp     L004E
00011Dr 1               ;
00011Dr 1               ; game_state->player.entity.hp = 99;
00011Dr 1               ;
00011Dr 1  A0 01        L004F:	ldy     #$01
00011Fr 1  B1 rr        	lda     (sp),y
000121r 1  85 rr        	sta     ptr1+1
000123r 1  88           	dey
000124r 1  B1 rr        	lda     (sp),y
000126r 1  85 rr        	sta     ptr1
000128r 1  A9 63        	lda     #$63
00012Ar 1  A0 F4        	ldy     #$F4
00012Cr 1  91 rr        	sta     (ptr1),y
00012Er 1  C8           	iny
00012Fr 1  A9 00        	lda     #$00
000131r 1  91 rr        	sta     (ptr1),y
000133r 1               ;
000133r 1               ; game_state->player.entity.x = SCREEN_SIZE_X/2;
000133r 1               ;
000133r 1  A0 01        	ldy     #$01
000135r 1  B1 rr        	lda     (sp),y
000137r 1  85 rr        	sta     ptr1+1
000139r 1  88           	dey
00013Ar 1  B1 rr        	lda     (sp),y
00013Cr 1  85 rr        	sta     ptr1
00013Er 1  A9 14        	lda     #$14
000140r 1  A0 F0        	ldy     #$F0
000142r 1  91 rr        	sta     (ptr1),y
000144r 1  C8           	iny
000145r 1  A9 00        	lda     #$00
000147r 1  91 rr        	sta     (ptr1),y
000149r 1               ;
000149r 1               ; game_state->player.entity.type = ENTITY_PLAYER;
000149r 1               ;
000149r 1  A0 01        	ldy     #$01
00014Br 1  B1 rr        	lda     (sp),y
00014Dr 1  85 rr        	sta     ptr1+1
00014Fr 1  88           	dey
000150r 1  B1 rr        	lda     (sp),y
000152r 1  85 rr        	sta     ptr1
000154r 1  A9 01        	lda     #$01
000156r 1  A0 F6        	ldy     #$F6
000158r 1  91 rr        	sta     (ptr1),y
00015Ar 1  C8           	iny
00015Br 1  A9 00        	lda     #$00
00015Dr 1  91 rr        	sta     (ptr1),y
00015Fr 1               ;
00015Fr 1               ; };
00015Fr 1               ;
00015Fr 1  4C rr rr     	jmp     incsp2
000162r 1               
000162r 1               .endproc
000162r 1               
000162r 1               ; ---------------------------------------------------------------
000162r 1               ; unsigned char __near__ get_entity_tile (int)
000162r 1               ; ---------------------------------------------------------------
000162r 1               
000162r 1               .segment	"CODE"
000162r 1               
000162r 1               .proc	_get_entity_tile: near
000162r 1               
000162r 1               .segment	"CODE"
000162r 1               
000162r 1               ;
000162r 1               ; {
000162r 1               ;
000162r 1  20 rr rr     	jsr     pushax
000165r 1               ;
000165r 1               ; switch(type)
000165r 1               ;
000165r 1  A0 01        	ldy     #$01
000167r 1  B1 rr        	lda     (sp),y
000169r 1  AA           	tax
00016Ar 1  88           	dey
00016Br 1  B1 rr        	lda     (sp),y
00016Dr 1               ;
00016Dr 1               ; }
00016Dr 1               ;
00016Dr 1  E0 00        	cpx     #$00
00016Fr 1  D0 15        	bne     L0072
000171r 1  C9 01        	cmp     #$01
000173r 1  F0 07        	beq     L00CA
000175r 1  C9 02        	cmp     #$02
000177r 1  F0 08        	beq     L00CB
000179r 1  4C rr rr     	jmp     L00CC
00017Cr 1               ;
00017Cr 1               ; return 'p';
00017Cr 1               ;
00017Cr 1  A9 70        L00CA:	lda     #$70
00017Er 1  4C rr rr     	jmp     incsp2
000181r 1               ;
000181r 1               ; return 'e';
000181r 1               ;
000181r 1  A9 65        L00CB:	lda     #$65
000183r 1  4C rr rr     	jmp     incsp2
000186r 1               ;
000186r 1               ; return 'x';
000186r 1               ;
000186r 1  A2 00        L0072:	ldx     #$00
000188r 1  A9 78        L00CC:	lda     #$78
00018Ar 1               ;
00018Ar 1               ; }
00018Ar 1               ;
00018Ar 1  4C rr rr     	jmp     incsp2
00018Dr 1               
00018Dr 1               .endproc
00018Dr 1               
00018Dr 1               ; ---------------------------------------------------------------
00018Dr 1               ; void __near__ draw_entity (__near__ unsigned char *, __near__ struct s_entity *)
00018Dr 1               ; ---------------------------------------------------------------
00018Dr 1               
00018Dr 1               .segment	"CODE"
00018Dr 1               
00018Dr 1               .proc	_draw_entity: near
00018Dr 1               
00018Dr 1               .segment	"BSS"
000006r 1               
000006r 1               L007B:
000006r 1  00 00        	.res	2,$00
000008r 1               L007D:
000008r 1  00 00        	.res	2,$00
00000Ar 1               
00000Ar 1               .segment	"CODE"
00018Dr 1               
00018Dr 1               ;
00018Dr 1               ; {
00018Dr 1               ;
00018Dr 1  20 rr rr     	jsr     pushax
000190r 1               ;
000190r 1               ; const int FIRST_DIGIT_CHAR = 0x10;
000190r 1               ;
000190r 1  A2 00        	ldx     #$00
000192r 1  A9 10        	lda     #$10
000194r 1  8D rr rr     	sta     L007B
000197r 1  8E rr rr     	stx     L007B+1
00019Ar 1               ;
00019Ar 1               ; unsigned char *draw_ptr = &screen_ptr[e_ptr->y * SCREEN_SIZE_X + e_ptr->x];
00019Ar 1               ;
00019Ar 1  A0 05        	ldy     #$05
00019Cr 1  20 rr rr     	jsr     pushwysp
00019Fr 1  A0 03        	ldy     #$03
0001A1r 1  B1 rr        	lda     (sp),y
0001A3r 1  85 rr        	sta     ptr1+1
0001A5r 1  88           	dey
0001A6r 1  B1 rr        	lda     (sp),y
0001A8r 1  85 rr        	sta     ptr1
0001AAr 1  C8           	iny
0001ABr 1  B1 rr        	lda     (ptr1),y
0001ADr 1  AA           	tax
0001AEr 1  88           	dey
0001AFr 1  B1 rr        	lda     (ptr1),y
0001B1r 1  20 rr rr     	jsr     pushax
0001B4r 1  A9 28        	lda     #$28
0001B6r 1  20 rr rr     	jsr     tosmula0
0001B9r 1  20 rr rr     	jsr     pushax
0001BCr 1  A0 05        	ldy     #$05
0001BEr 1  B1 rr        	lda     (sp),y
0001C0r 1  85 rr        	sta     ptr1+1
0001C2r 1  88           	dey
0001C3r 1  B1 rr        	lda     (sp),y
0001C5r 1  85 rr        	sta     ptr1
0001C7r 1  A0 01        	ldy     #$01
0001C9r 1  B1 rr        	lda     (ptr1),y
0001CBr 1  AA           	tax
0001CCr 1  88           	dey
0001CDr 1  B1 rr        	lda     (ptr1),y
0001CFr 1  20 rr rr     	jsr     tosaddax
0001D2r 1  20 rr rr     	jsr     tosaddax
0001D5r 1  8D rr rr     	sta     L007D
0001D8r 1  8E rr rr     	stx     L007D+1
0001DBr 1               ;
0001DBr 1               ; *draw_ptr = get_entity_tile(e_ptr->type);
0001DBr 1               ;
0001DBr 1  20 rr rr     	jsr     pushax
0001DEr 1  A0 03        	ldy     #$03
0001E0r 1  B1 rr        	lda     (sp),y
0001E2r 1  85 rr        	sta     ptr1+1
0001E4r 1  88           	dey
0001E5r 1  B1 rr        	lda     (sp),y
0001E7r 1  85 rr        	sta     ptr1
0001E9r 1  A0 07        	ldy     #$07
0001EBr 1  B1 rr        	lda     (ptr1),y
0001EDr 1  AA           	tax
0001EEr 1  88           	dey
0001EFr 1  B1 rr        	lda     (ptr1),y
0001F1r 1  20 rr rr     	jsr     _get_entity_tile
0001F4r 1  A0 00        	ldy     #$00
0001F6r 1  20 rr rr     	jsr     staspidx
0001F9r 1               ;
0001F9r 1               ; *(++draw_ptr) = e_ptr->hp / 10 + FIRST_DIGIT_CHAR;
0001F9r 1               ;
0001F9r 1  EE rr rr     	inc     L007D
0001FCr 1  D0 03        	bne     L0085
0001FEr 1  EE rr rr     	inc     L007D+1
000201r 1  AD rr rr     L0085:	lda     L007D
000204r 1  AE rr rr     	ldx     L007D+1
000207r 1  20 rr rr     	jsr     pushax
00020Ar 1  A0 03        	ldy     #$03
00020Cr 1  B1 rr        	lda     (sp),y
00020Er 1  85 rr        	sta     ptr1+1
000210r 1  88           	dey
000211r 1  B1 rr        	lda     (sp),y
000213r 1  85 rr        	sta     ptr1
000215r 1  A0 05        	ldy     #$05
000217r 1  B1 rr        	lda     (ptr1),y
000219r 1  AA           	tax
00021Ar 1  88           	dey
00021Br 1  B1 rr        	lda     (ptr1),y
00021Dr 1  20 rr rr     	jsr     pushax
000220r 1  A9 0A        	lda     #$0A
000222r 1  20 rr rr     	jsr     tosdiva0
000225r 1  18           	clc
000226r 1  6D rr rr     	adc     L007B
000229r 1  48           	pha
00022Ar 1  8A           	txa
00022Br 1  6D rr rr     	adc     L007B+1
00022Er 1  68           	pla
00022Fr 1  A0 00        	ldy     #$00
000231r 1  20 rr rr     	jsr     staspidx
000234r 1               ;
000234r 1               ; *(++draw_ptr) = e_ptr->hp % 10 + FIRST_DIGIT_CHAR;
000234r 1               ;
000234r 1  EE rr rr     	inc     L007D
000237r 1  D0 03        	bne     L0089
000239r 1  EE rr rr     	inc     L007D+1
00023Cr 1  AD rr rr     L0089:	lda     L007D
00023Fr 1  AE rr rr     	ldx     L007D+1
000242r 1  20 rr rr     	jsr     pushax
000245r 1  A0 03        	ldy     #$03
000247r 1  B1 rr        	lda     (sp),y
000249r 1  85 rr        	sta     ptr1+1
00024Br 1  88           	dey
00024Cr 1  B1 rr        	lda     (sp),y
00024Er 1  85 rr        	sta     ptr1
000250r 1  A0 05        	ldy     #$05
000252r 1  B1 rr        	lda     (ptr1),y
000254r 1  AA           	tax
000255r 1  88           	dey
000256r 1  B1 rr        	lda     (ptr1),y
000258r 1  20 rr rr     	jsr     pushax
00025Br 1  A2 00        	ldx     #$00
00025Dr 1  A9 0A        	lda     #$0A
00025Fr 1  20 rr rr     	jsr     tosmoda0
000262r 1  18           	clc
000263r 1  6D rr rr     	adc     L007B
000266r 1  48           	pha
000267r 1  8A           	txa
000268r 1  6D rr rr     	adc     L007B+1
00026Br 1  68           	pla
00026Cr 1  A0 00        	ldy     #$00
00026Er 1  20 rr rr     	jsr     staspidx
000271r 1               ;
000271r 1               ; };
000271r 1               ;
000271r 1  4C rr rr     	jmp     incsp4
000274r 1               
000274r 1               .endproc
000274r 1               
000274r 1               ; ---------------------------------------------------------------
000274r 1               ; void __near__ damage_enemy (__near__ struct s_entity *)
000274r 1               ; ---------------------------------------------------------------
000274r 1               
000274r 1               .segment	"CODE"
000274r 1               
000274r 1               .proc	_damage_enemy: near
000274r 1               
000274r 1               .segment	"CODE"
000274r 1               
000274r 1               ;
000274r 1               ; {
000274r 1               ;
000274r 1  20 rr rr     	jsr     pushax
000277r 1               ;
000277r 1               ; if (e_ptr->hp > 0)
000277r 1               ;
000277r 1  A0 01        	ldy     #$01
000279r 1  B1 rr        	lda     (sp),y
00027Br 1  85 rr        	sta     ptr1+1
00027Dr 1  88           	dey
00027Er 1  B1 rr        	lda     (sp),y
000280r 1  85 rr        	sta     ptr1
000282r 1  A0 05        	ldy     #$05
000284r 1  B1 rr        	lda     (ptr1),y
000286r 1  AA           	tax
000287r 1  88           	dey
000288r 1  B1 rr        	lda     (ptr1),y
00028Ar 1  C9 01        	cmp     #$01
00028Cr 1  8A           	txa
00028Dr 1  E9 00        	sbc     #$00
00028Fr 1  70 02        	bvs     L008E
000291r 1  49 80        	eor     #$80
000293r 1  10 20        L008E:	bpl     L008C
000295r 1               ;
000295r 1               ; e_ptr->hp--;
000295r 1               ;
000295r 1  A0 01        	ldy     #$01
000297r 1  B1 rr        	lda     (sp),y
000299r 1  AA           	tax
00029Ar 1  88           	dey
00029Br 1  B1 rr        	lda     (sp),y
00029Dr 1  20 rr rr     	jsr     pushax
0002A0r 1  85 rr        	sta     ptr1
0002A2r 1  86 rr        	stx     ptr1+1
0002A4r 1  A0 05        	ldy     #$05
0002A6r 1  B1 rr        	lda     (ptr1),y
0002A8r 1  AA           	tax
0002A9r 1  88           	dey
0002AAr 1  B1 rr        	lda     (ptr1),y
0002ACr 1  38           	sec
0002ADr 1  E9 01        	sbc     #$01
0002AFr 1  B0 01        	bcs     L00CD
0002B1r 1  CA           	dex
0002B2r 1  20 rr rr     L00CD:	jsr     staxspidx
0002B5r 1               ;
0002B5r 1               ; }
0002B5r 1               ;
0002B5r 1  4C rr rr     L008C:	jmp     incsp2
0002B8r 1               
0002B8r 1               .endproc
0002B8r 1               
0002B8r 1               ; ---------------------------------------------------------------
0002B8r 1               ; void __near__ one_frame (__near__ struct s_game_state *, __near__ unsigned char *)
0002B8r 1               ; ---------------------------------------------------------------
0002B8r 1               
0002B8r 1               .segment	"CODE"
0002B8r 1               
0002B8r 1               .proc	_one_frame: near
0002B8r 1               
0002B8r 1               .segment	"BSS"
00000Ar 1               
00000Ar 1               L0092:
00000Ar 1  00 00        	.res	2,$00
00000Cr 1               L0093:
00000Cr 1  00 00        	.res	2,$00
00000Er 1               
00000Er 1               .segment	"CODE"
0002B8r 1               
0002B8r 1               ;
0002B8r 1               ; {
0002B8r 1               ;
0002B8r 1  20 rr rr     	jsr     pushax
0002BBr 1               ;
0002BBr 1               ; for (index = 0; index < _countof(game_state->enemies); index++)
0002BBr 1               ;
0002BBr 1  A9 00        	lda     #$00
0002BDr 1  8D rr rr     	sta     L0092
0002C0r 1  8D rr rr     	sta     L0092+1
0002C3r 1  AD rr rr     L0094:	lda     L0092+1
0002C6r 1  C9 00        	cmp     #$00
0002C8r 1  D0 05        	bne     L009F
0002CAr 1  AD rr rr     	lda     L0092
0002CDr 1  C9 1E        	cmp     #$1E
0002CFr 1  B0 3F        L009F:	bcs     L0095
0002D1r 1               ;
0002D1r 1               ; e = &game_state->enemies[index];
0002D1r 1               ;
0002D1r 1  AD rr rr     	lda     L0092
0002D4r 1  AE rr rr     	ldx     L0092+1
0002D7r 1  20 rr rr     	jsr     aslax3
0002DAr 1  18           	clc
0002DBr 1  A0 02        	ldy     #$02
0002DDr 1  71 rr        	adc     (sp),y
0002DFr 1  48           	pha
0002E0r 1  8A           	txa
0002E1r 1  C8           	iny
0002E2r 1  71 rr        	adc     (sp),y
0002E4r 1  AA           	tax
0002E5r 1  68           	pla
0002E6r 1  8D rr rr     	sta     L0093
0002E9r 1  8E rr rr     	stx     L0093+1
0002ECr 1               ;
0002ECr 1               ; damage_enemy(e);
0002ECr 1               ;
0002ECr 1  20 rr rr     	jsr     _damage_enemy
0002EFr 1               ;
0002EFr 1               ; draw_entity(screen_ptr, e);
0002EFr 1               ;
0002EFr 1  20 rr rr     	jsr     pushw0sp
0002F2r 1  AD rr rr     	lda     L0093
0002F5r 1  AE rr rr     	ldx     L0093+1
0002F8r 1  20 rr rr     	jsr     _draw_entity
0002FBr 1               ;
0002FBr 1               ; for (index = 0; index < _countof(game_state->enemies); index++)
0002FBr 1               ;
0002FBr 1  AD rr rr     	lda     L0092
0002FEr 1  AE rr rr     	ldx     L0092+1
000301r 1  18           	clc
000302r 1  69 01        	adc     #$01
000304r 1  90 01        	bcc     L00A1
000306r 1  E8           	inx
000307r 1  8D rr rr     L00A1:	sta     L0092
00030Ar 1  8E rr rr     	stx     L0092+1
00030Dr 1  4C rr rr     	jmp     L0094
000310r 1               ;
000310r 1               ; draw_entity(screen_ptr, &game_state->player.entity);
000310r 1               ;
000310r 1  20 rr rr     L0095:	jsr     pushw0sp
000313r 1  A0 05        	ldy     #$05
000315r 1  B1 rr        	lda     (sp),y
000317r 1  AA           	tax
000318r 1  88           	dey
000319r 1  B1 rr        	lda     (sp),y
00031Br 1  18           	clc
00031Cr 1  69 F0        	adc     #$F0
00031Er 1  90 01        	bcc     L00AD
000320r 1  E8           	inx
000321r 1  20 rr rr     L00AD:	jsr     _draw_entity
000324r 1               ;
000324r 1               ; }
000324r 1               ;
000324r 1  4C rr rr     	jmp     incsp4
000327r 1               
000327r 1               .endproc
000327r 1               
000327r 1               ; ---------------------------------------------------------------
000327r 1               ; void __near__ main (void)
000327r 1               ; ---------------------------------------------------------------
000327r 1               
000327r 1               .segment	"CODE"
000327r 1               
000327r 1               .proc	_main: near
000327r 1               
000327r 1               .segment	"BSS"
00000Er 1               
00000Er 1               L00AF:
00000Er 1  00 00        	.res	2,$00
000010r 1               L00B0:
000010r 1  00 00        	.res	2,$00
000012r 1               L00B1:
000012r 1  00 00 00 00  	.res	250,$00
000016r 1  00 00 00 00  
00001Ar 1  00 00 00 00  
00010Cr 1               
00010Cr 1               .segment	"CODE"
000327r 1               
000327r 1               ;
000327r 1               ; screen_ptr = OS.savmsc;
000327r 1               ;
000327r 1  A5 59        	lda     $0058+1
000329r 1  8D rr rr     	sta     L00AF+1
00032Cr 1  A5 58        	lda     $0058
00032Er 1  8D rr rr     	sta     L00AF
000331r 1               ;
000331r 1               ; set_entities(&game_state);
000331r 1               ;
000331r 1  A9 rr        	lda     #<(L00B1)
000333r 1  A2 rr        	ldx     #>(L00B1)
000335r 1  20 rr rr     	jsr     _set_entities
000338r 1               ;
000338r 1               ; start_benchmark();
000338r 1               ;
000338r 1  20 rr rr     	jsr     _start_benchmark
00033Br 1               ;
00033Br 1               ; for (times = 0; times < 100; ++times)
00033Br 1               ;
00033Br 1  A9 00        	lda     #$00
00033Dr 1  8D rr rr     	sta     L00B0
000340r 1  8D rr rr     	sta     L00B0+1
000343r 1  AD rr rr     L00B8:	lda     L00B0+1
000346r 1  C9 00        	cmp     #$00
000348r 1  D0 05        	bne     L00BF
00034Ar 1  AD rr rr     	lda     L00B0
00034Dr 1  C9 64        	cmp     #$64
00034Fr 1  B0 1B        L00BF:	bcs     L00B9
000351r 1               ;
000351r 1               ; one_frame(&game_state, screen_ptr);
000351r 1               ;
000351r 1  A9 rr        	lda     #<(L00B1)
000353r 1  A2 rr        	ldx     #>(L00B1)
000355r 1  20 rr rr     	jsr     pushax
000358r 1  AD rr rr     	lda     L00AF
00035Br 1  AE rr rr     	ldx     L00AF+1
00035Er 1  20 rr rr     	jsr     _one_frame
000361r 1               ;
000361r 1               ; for (times = 0; times < 100; ++times)
000361r 1               ;
000361r 1  EE rr rr     	inc     L00B0
000364r 1  D0 DD        	bne     L00B8
000366r 1  EE rr rr     	inc     L00B0+1
000369r 1  4C rr rr     	jmp     L00B8
00036Cr 1               ;
00036Cr 1               ; end_benchmark();
00036Cr 1               ;
00036Cr 1  20 rr rr     L00B9:	jsr     _end_benchmark
00036Fr 1               ;
00036Fr 1               ; for(;;);
00036Fr 1               ;
00036Fr 1  4C rr rr     L00C8:	jmp     L00C8
000372r 1               
000372r 1               .endproc
000372r 1               
000372r 1               
