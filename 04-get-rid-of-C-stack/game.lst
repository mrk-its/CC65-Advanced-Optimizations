ca65 V2.18 - Ubuntu 2.18-1
Main file   : game.s
Current file: game.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.18 - Ubuntu 2.18-1
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.import		_printf
000000r 1               	.export		_start_benchmark
000000r 1               	.export		_ticks
000000r 1               	.export		_end_benchmark
000000r 1               	.export		_screen_ptr
000000r 1               	.export		_game_state
000000r 1               	.export		_place_enemy_ptr
000000r 1               	.export		_place_enemy
000000r 1               	.export		_set_entities
000000r 1               	.export		_get_entity_tile
000000r 1               	.export		_draw_entity_ptr
000000r 1               	.export		_draw_entity
000000r 1               	.export		_damage_enemy_ptr
000000r 1               	.export		_damage_enemy
000000r 1               	.export		_one_frame
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               L0042:
000000r 1  25 75 20 74  	.byte	$25,$75,$20,$74,$69,$63,$6B,$73,$00
000004r 1  69 63 6B 73  
000008r 1  00           
000009r 1               
000009r 1               .segment	"BSS"
000000r 1               
000000r 1               _ticks:
000000r 1  00 00        	.res	2,$00
000002r 1               _screen_ptr:
000002r 1  00 00        	.res	2,$00
000004r 1               _game_state:
000004r 1  00 00 00 00  	.res	156,$00
000008r 1  00 00 00 00  
00000Cr 1  00 00 00 00  
0000A0r 1               _place_enemy_ptr:
0000A0r 1  00 00        	.res	2,$00
0000A2r 1               _draw_entity_ptr:
0000A2r 1  00 00        	.res	2,$00
0000A4r 1               _damage_enemy_ptr:
0000A4r 1  00 00        	.res	2,$00
0000A6r 1               
0000A6r 1               ; ---------------------------------------------------------------
0000A6r 1               ; void __near__ start_benchmark (void)
0000A6r 1               ; ---------------------------------------------------------------
0000A6r 1               
0000A6r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_start_benchmark: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               ;
000000r 1               ; asm("SEI");
000000r 1               ;
000000r 1  78           	sei
000001r 1               ;
000001r 1               ; asm("lda $14");
000001r 1               ;
000001r 1  A5 14        	lda     $14
000003r 1               ;
000003r 1               ; asm("cmp $14");
000003r 1               ;
000003r 1  C5 14        L0025:	cmp     $14
000005r 1               ;
000005r 1               ; asm("beq %g", wvb);
000005r 1               ;
000005r 1  F0 FC        	beq     L0025
000007r 1               ;
000007r 1               ; asm("lda #0");
000007r 1               ;
000007r 1  A9 00        	lda     #0
000009r 1               ;
000009r 1               ; asm("sta $13");
000009r 1               ;
000009r 1  85 13        	sta     $13
00000Br 1               ;
00000Br 1               ; asm("sta $14");
00000Br 1               ;
00000Br 1  85 14        	sta     $14
00000Dr 1               ;
00000Dr 1               ; asm("CLI");
00000Dr 1               ;
00000Dr 1  58           	cli
00000Er 1               ;
00000Er 1               ; }
00000Er 1               ;
00000Er 1  60           	rts
00000Fr 1               
00000Fr 1               .endproc
00000Fr 1               
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               ; void __near__ end_benchmark (void)
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               .proc	_end_benchmark: near
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               ;
00000Fr 1               ; asm("SEI");
00000Fr 1               ;
00000Fr 1  78           	sei
000010r 1               ;
000010r 1               ; asm("lda $14");
000010r 1               ;
000010r 1  A5 14        	lda     $14
000012r 1               ;
000012r 1               ; asm("sta %v", ticks);
000012r 1               ;
000012r 1  8D rr rr     	sta     _ticks
000015r 1               ;
000015r 1               ; asm("lda $13");
000015r 1               ;
000015r 1  A5 13        	lda     $13
000017r 1               ;
000017r 1               ; asm("sta %v+1", ticks);
000017r 1               ;
000017r 1  8D rr rr     	sta     _ticks+1
00001Ar 1               ;
00001Ar 1               ; asm("CLI");
00001Ar 1               ;
00001Ar 1  58           	cli
00001Br 1               ;
00001Br 1               ; printf("%u ticks", ticks);
00001Br 1               ;
00001Br 1  A9 rr        	lda     #<(L0042)
00001Dr 1  A2 rr        	ldx     #>(L0042)
00001Fr 1  20 rr rr     	jsr     pushax
000022r 1  AD rr rr     	lda     _ticks
000025r 1  AE rr rr     	ldx     _ticks+1
000028r 1  20 rr rr     	jsr     pushax
00002Br 1  A0 04        	ldy     #$04
00002Dr 1  4C rr rr     	jmp     _printf
000030r 1               
000030r 1               .endproc
000030r 1               
000030r 1               ; ---------------------------------------------------------------
000030r 1               ; void __near__ place_enemy (unsigned char, unsigned char)
000030r 1               ; ---------------------------------------------------------------
000030r 1               
000030r 1               .segment	"CODE"
000030r 1               
000030r 1               .proc	_place_enemy: near
000030r 1               
000030r 1               .segment	"CODE"
000030r 1               
000030r 1               ;
000030r 1               ; {
000030r 1               ;
000030r 1  20 rr rr     	jsr     pusha
000033r 1               ;
000033r 1               ; place_enemy_ptr->x = x;
000033r 1               ;
000033r 1  AD rr rr     	lda     _place_enemy_ptr+1
000036r 1  85 rr        	sta     ptr1+1
000038r 1  AD rr rr     	lda     _place_enemy_ptr
00003Br 1  85 rr        	sta     ptr1
00003Dr 1  A0 01        	ldy     #$01
00003Fr 1  B1 rr        	lda     (sp),y
000041r 1  88           	dey
000042r 1  91 rr        	sta     (ptr1),y
000044r 1               ;
000044r 1               ; place_enemy_ptr->y = y;
000044r 1               ;
000044r 1  AD rr rr     	lda     _place_enemy_ptr+1
000047r 1  85 rr        	sta     ptr1+1
000049r 1  AD rr rr     	lda     _place_enemy_ptr
00004Cr 1  85 rr        	sta     ptr1
00004Er 1  B1 rr        	lda     (sp),y
000050r 1  C8           	iny
000051r 1  91 rr        	sta     (ptr1),y
000053r 1               ;
000053r 1               ; }
000053r 1               ;
000053r 1  4C rr rr     	jmp     incsp2
000056r 1               
000056r 1               .endproc
000056r 1               
000056r 1               ; ---------------------------------------------------------------
000056r 1               ; void __near__ set_entities (void)
000056r 1               ; ---------------------------------------------------------------
000056r 1               
000056r 1               .segment	"CODE"
000056r 1               
000056r 1               .proc	_set_entities: near
000056r 1               
000056r 1               .segment	"BSS"
0000A6r 1               
0000A6r 1               L004C:
0000A6r 1  00           	.res	1,$00
0000A7r 1               L004D:
0000A7r 1  00 00        	.res	2,$00
0000A9r 1               
0000A9r 1               .segment	"CODE"
000056r 1               
000056r 1               ;
000056r 1               ; for (index = 0; index < _countof(game_state.enemies); index++)
000056r 1               ;
000056r 1  A9 00        	lda     #$00
000058r 1  8D rr rr     	sta     L004C
00005Br 1  AD rr rr     L00BE:	lda     L004C
00005Er 1  C9 1E        	cmp     #$1E
000060r 1  B0 63        	bcs     L00BF
000062r 1               ;
000062r 1               ; e = &game_state.enemies[index];
000062r 1               ;
000062r 1  A2 00        	ldx     #$00
000064r 1  AD rr rr     	lda     L004C
000067r 1  20 rr rr     	jsr     mulax5
00006Ar 1  18           	clc
00006Br 1  69 rr        	adc     #<(_game_state)
00006Dr 1  A8           	tay
00006Er 1  8A           	txa
00006Fr 1  69 rr        	adc     #>(_game_state)
000071r 1  AA           	tax
000072r 1  98           	tya
000073r 1  8D rr rr     	sta     L004D
000076r 1  8E rr rr     	stx     L004D+1
000079r 1               ;
000079r 1               ; place_enemy_ptr = e;
000079r 1               ;
000079r 1  8D rr rr     	sta     _place_enemy_ptr
00007Cr 1  8E rr rr     	stx     _place_enemy_ptr+1
00007Fr 1               ;
00007Fr 1               ; place_enemy((index*5) % SCREEN_SIZE_X, index / 2 + 9);
00007Fr 1               ;
00007Fr 1  A2 00        	ldx     #$00
000081r 1  AD rr rr     	lda     L004C
000084r 1  20 rr rr     	jsr     mulax5
000087r 1  20 rr rr     	jsr     pushax
00008Ar 1  A9 28        	lda     #$28
00008Cr 1  20 rr rr     	jsr     tosumoda0
00008Fr 1  20 rr rr     	jsr     pusha
000092r 1  AD rr rr     	lda     L004C
000095r 1  4A           	lsr     a
000096r 1  18           	clc
000097r 1  69 09        	adc     #$09
000099r 1  20 rr rr     	jsr     _place_enemy
00009Cr 1               ;
00009Cr 1               ; e->hp = 99;
00009Cr 1               ;
00009Cr 1  AD rr rr     	lda     L004D+1
00009Fr 1  85 rr        	sta     ptr1+1
0000A1r 1  AD rr rr     	lda     L004D
0000A4r 1  85 rr        	sta     ptr1
0000A6r 1  A9 63        	lda     #$63
0000A8r 1  A0 02        	ldy     #$02
0000AAr 1  91 rr        	sta     (ptr1),y
0000ACr 1               ;
0000ACr 1               ; e->type = ENTITY_ENEMY;
0000ACr 1               ;
0000ACr 1  AD rr rr     	lda     L004D+1
0000AFr 1  85 rr        	sta     ptr1+1
0000B1r 1  AD rr rr     	lda     L004D
0000B4r 1  85 rr        	sta     ptr1
0000B6r 1  98           	tya
0000B7r 1  C8           	iny
0000B8r 1  91 rr        	sta     (ptr1),y
0000BAr 1  C8           	iny
0000BBr 1  A9 00        	lda     #$00
0000BDr 1  91 rr        	sta     (ptr1),y
0000BFr 1               ;
0000BFr 1               ; for (index = 0; index < _countof(game_state.enemies); index++)
0000BFr 1               ;
0000BFr 1  EE rr rr     	inc     L004C
0000C2r 1  4C rr rr     	jmp     L00BE
0000C5r 1               ;
0000C5r 1               ; game_state.player.entity.hp = 99;
0000C5r 1               ;
0000C5r 1  A9 63        L00BF:	lda     #$63
0000C7r 1  8D rr rr     	sta     _game_state+152
0000CAr 1               ;
0000CAr 1               ; game_state.player.entity.x = SCREEN_SIZE_X/2;
0000CAr 1               ;
0000CAr 1  A9 14        	lda     #$14
0000CCr 1  8D rr rr     	sta     _game_state+150
0000CFr 1               ;
0000CFr 1               ; game_state.player.entity.type = ENTITY_PLAYER;
0000CFr 1               ;
0000CFr 1  A2 00        	ldx     #$00
0000D1r 1  A9 01        	lda     #$01
0000D3r 1  8D rr rr     	sta     _game_state+153
0000D6r 1  8E rr rr     	stx     _game_state+153+1
0000D9r 1               ;
0000D9r 1               ; };
0000D9r 1               ;
0000D9r 1  60           	rts
0000DAr 1               
0000DAr 1               .endproc
0000DAr 1               
0000DAr 1               ; ---------------------------------------------------------------
0000DAr 1               ; unsigned char __near__ get_entity_tile (int)
0000DAr 1               ; ---------------------------------------------------------------
0000DAr 1               
0000DAr 1               .segment	"CODE"
0000DAr 1               
0000DAr 1               .proc	_get_entity_tile: near
0000DAr 1               
0000DAr 1               .segment	"CODE"
0000DAr 1               
0000DAr 1               ;
0000DAr 1               ; {
0000DAr 1               ;
0000DAr 1  20 rr rr     	jsr     pushax
0000DDr 1               ;
0000DDr 1               ; switch(type)
0000DDr 1               ;
0000DDr 1  A0 01        	ldy     #$01
0000DFr 1  B1 rr        	lda     (sp),y
0000E1r 1  AA           	tax
0000E2r 1  88           	dey
0000E3r 1  B1 rr        	lda     (sp),y
0000E5r 1               ;
0000E5r 1               ; }
0000E5r 1               ;
0000E5r 1  E0 00        	cpx     #$00
0000E7r 1  D0 15        	bne     L0071
0000E9r 1  C9 01        	cmp     #$01
0000EBr 1  F0 07        	beq     L00C0
0000EDr 1  C9 02        	cmp     #$02
0000EFr 1  F0 08        	beq     L00C1
0000F1r 1  4C rr rr     	jmp     L00C2
0000F4r 1               ;
0000F4r 1               ; return 'p';
0000F4r 1               ;
0000F4r 1  A9 70        L00C0:	lda     #$70
0000F6r 1  4C rr rr     	jmp     incsp2
0000F9r 1               ;
0000F9r 1               ; return 'e';
0000F9r 1               ;
0000F9r 1  A9 65        L00C1:	lda     #$65
0000FBr 1  4C rr rr     	jmp     incsp2
0000FEr 1               ;
0000FEr 1               ; return 'x';
0000FEr 1               ;
0000FEr 1  A2 00        L0071:	ldx     #$00
000100r 1  A9 78        L00C2:	lda     #$78
000102r 1               ;
000102r 1               ; }
000102r 1               ;
000102r 1  4C rr rr     	jmp     incsp2
000105r 1               
000105r 1               .endproc
000105r 1               
000105r 1               ; ---------------------------------------------------------------
000105r 1               ; void __near__ draw_entity (void)
000105r 1               ; ---------------------------------------------------------------
000105r 1               
000105r 1               .segment	"CODE"
000105r 1               
000105r 1               .proc	_draw_entity: near
000105r 1               
000105r 1               .segment	"BSS"
0000A9r 1               
0000A9r 1               L007A:
0000A9r 1  00           	.res	1,$00
0000AAr 1               L007C:
0000AAr 1  00 00        	.res	2,$00
0000ACr 1               
0000ACr 1               .segment	"CODE"
000105r 1               
000105r 1               ;
000105r 1               ; const unsigned char FIRST_DIGIT_CHAR = 0x10;
000105r 1               ;
000105r 1  A9 10        	lda     #$10
000107r 1  8D rr rr     	sta     L007A
00010Ar 1               ;
00010Ar 1               ; unsigned char *draw_ptr = &screen_ptr[draw_entity_ptr->y * SCREEN_SIZE_X + draw_entity_ptr->x];
00010Ar 1               ;
00010Ar 1  AD rr rr     	lda     _screen_ptr
00010Dr 1  AE rr rr     	ldx     _screen_ptr+1
000110r 1  20 rr rr     	jsr     pushax
000113r 1  AD rr rr     	lda     _draw_entity_ptr+1
000116r 1  85 rr        	sta     ptr1+1
000118r 1  AD rr rr     	lda     _draw_entity_ptr
00011Br 1  85 rr        	sta     ptr1
00011Dr 1  A0 01        	ldy     #$01
00011Fr 1  B1 rr        	lda     (ptr1),y
000121r 1  20 rr rr     	jsr     pusha0
000124r 1  A9 28        	lda     #$28
000126r 1  20 rr rr     	jsr     tosumula0
000129r 1  20 rr rr     	jsr     pushax
00012Cr 1  AD rr rr     	lda     _draw_entity_ptr+1
00012Fr 1  85 rr        	sta     ptr1+1
000131r 1  AD rr rr     	lda     _draw_entity_ptr
000134r 1  85 rr        	sta     ptr1
000136r 1  A2 00        	ldx     #$00
000138r 1  A1 rr        	lda     (ptr1,x)
00013Ar 1  20 rr rr     	jsr     tosadda0
00013Dr 1  20 rr rr     	jsr     tosaddax
000140r 1  8D rr rr     	sta     L007C
000143r 1  8E rr rr     	stx     L007C+1
000146r 1               ;
000146r 1               ; *draw_ptr = get_entity_tile(draw_entity_ptr->type);
000146r 1               ;
000146r 1  20 rr rr     	jsr     pushax
000149r 1  AD rr rr     	lda     _draw_entity_ptr+1
00014Cr 1  85 rr        	sta     ptr1+1
00014Er 1  AD rr rr     	lda     _draw_entity_ptr
000151r 1  85 rr        	sta     ptr1
000153r 1  A0 04        	ldy     #$04
000155r 1  B1 rr        	lda     (ptr1),y
000157r 1  AA           	tax
000158r 1  88           	dey
000159r 1  B1 rr        	lda     (ptr1),y
00015Br 1  20 rr rr     	jsr     _get_entity_tile
00015Er 1  A0 00        	ldy     #$00
000160r 1  20 rr rr     	jsr     staspidx
000163r 1               ;
000163r 1               ; *(++draw_ptr) = draw_entity_ptr->hp / 10 + FIRST_DIGIT_CHAR;
000163r 1               ;
000163r 1  EE rr rr     	inc     L007C
000166r 1  D0 03        	bne     L0084
000168r 1  EE rr rr     	inc     L007C+1
00016Br 1  AD rr rr     L0084:	lda     L007C
00016Er 1  AE rr rr     	ldx     L007C+1
000171r 1  20 rr rr     	jsr     pushax
000174r 1  AD rr rr     	lda     _draw_entity_ptr+1
000177r 1  85 rr        	sta     ptr1+1
000179r 1  AD rr rr     	lda     _draw_entity_ptr
00017Cr 1  85 rr        	sta     ptr1
00017Er 1  A0 02        	ldy     #$02
000180r 1  B1 rr        	lda     (ptr1),y
000182r 1  20 rr rr     	jsr     pusha0
000185r 1  A9 0A        	lda     #$0A
000187r 1  20 rr rr     	jsr     tosudiva0
00018Ar 1  18           	clc
00018Br 1  6D rr rr     	adc     L007A
00018Er 1  A0 00        	ldy     #$00
000190r 1  20 rr rr     	jsr     staspidx
000193r 1               ;
000193r 1               ; *(++draw_ptr) = draw_entity_ptr->hp % 10 + FIRST_DIGIT_CHAR;
000193r 1               ;
000193r 1  EE rr rr     	inc     L007C
000196r 1  D0 03        	bne     L0088
000198r 1  EE rr rr     	inc     L007C+1
00019Br 1  AD rr rr     L0088:	lda     L007C
00019Er 1  AE rr rr     	ldx     L007C+1
0001A1r 1  20 rr rr     	jsr     pushax
0001A4r 1  AD rr rr     	lda     _draw_entity_ptr+1
0001A7r 1  85 rr        	sta     ptr1+1
0001A9r 1  AD rr rr     	lda     _draw_entity_ptr
0001ACr 1  85 rr        	sta     ptr1
0001AEr 1  A0 02        	ldy     #$02
0001B0r 1  B1 rr        	lda     (ptr1),y
0001B2r 1  20 rr rr     	jsr     pusha0
0001B5r 1  A9 0A        	lda     #$0A
0001B7r 1  20 rr rr     	jsr     tosumoda0
0001BAr 1  18           	clc
0001BBr 1  6D rr rr     	adc     L007A
0001BEr 1  A0 00        	ldy     #$00
0001C0r 1  4C rr rr     	jmp     staspidx
0001C3r 1               
0001C3r 1               .endproc
0001C3r 1               
0001C3r 1               ; ---------------------------------------------------------------
0001C3r 1               ; void __near__ damage_enemy (void)
0001C3r 1               ; ---------------------------------------------------------------
0001C3r 1               
0001C3r 1               .segment	"CODE"
0001C3r 1               
0001C3r 1               .proc	_damage_enemy: near
0001C3r 1               
0001C3r 1               .segment	"CODE"
0001C3r 1               
0001C3r 1               ;
0001C3r 1               ; if (damage_enemy_ptr->hp > 0)
0001C3r 1               ;
0001C3r 1  AD rr rr     	lda     _damage_enemy_ptr+1
0001C6r 1  85 rr        	sta     ptr1+1
0001C8r 1  AD rr rr     	lda     _damage_enemy_ptr
0001CBr 1  85 rr        	sta     ptr1
0001CDr 1  A0 02        	ldy     #$02
0001CFr 1  B1 rr        	lda     (ptr1),y
0001D1r 1  F0 17        	beq     L008B
0001D3r 1               ;
0001D3r 1               ; damage_enemy_ptr->hp--;
0001D3r 1               ;
0001D3r 1  AD rr rr     	lda     _damage_enemy_ptr
0001D6r 1  AE rr rr     	ldx     _damage_enemy_ptr+1
0001D9r 1  20 rr rr     	jsr     pushax
0001DCr 1  85 rr        	sta     ptr1
0001DEr 1  86 rr        	stx     ptr1+1
0001E0r 1  A0 02        	ldy     #$02
0001E2r 1  B1 rr        	lda     (ptr1),y
0001E4r 1  38           	sec
0001E5r 1  E9 01        	sbc     #$01
0001E7r 1  4C rr rr     	jmp     staspidx
0001EAr 1               ;
0001EAr 1               ; }
0001EAr 1               ;
0001EAr 1  60           L008B:	rts
0001EBr 1               
0001EBr 1               .endproc
0001EBr 1               
0001EBr 1               ; ---------------------------------------------------------------
0001EBr 1               ; void __near__ one_frame (void)
0001EBr 1               ; ---------------------------------------------------------------
0001EBr 1               
0001EBr 1               .segment	"CODE"
0001EBr 1               
0001EBr 1               .proc	_one_frame: near
0001EBr 1               
0001EBr 1               .segment	"BSS"
0000ACr 1               
0000ACr 1               L008F:
0000ACr 1  00           	.res	1,$00
0000ADr 1               L0090:
0000ADr 1  00 00        	.res	2,$00
0000AFr 1               
0000AFr 1               .segment	"CODE"
0001EBr 1               
0001EBr 1               ;
0001EBr 1               ; for (index=0;index < _countof(game_state.enemies);index++)
0001EBr 1               ;
0001EBr 1  A9 00        	lda     #$00
0001EDr 1  8D rr rr     	sta     L008F
0001F0r 1  AD rr rr     L00C5:	lda     L008F
0001F3r 1  C9 1E        	cmp     #$1E
0001F5r 1  B0 35        	bcs     L0092
0001F7r 1               ;
0001F7r 1               ; e = &game_state.enemies[index];
0001F7r 1               ;
0001F7r 1  A2 00        	ldx     #$00
0001F9r 1  AD rr rr     	lda     L008F
0001FCr 1  20 rr rr     	jsr     mulax5
0001FFr 1  18           	clc
000200r 1  69 rr        	adc     #<(_game_state)
000202r 1  A8           	tay
000203r 1  8A           	txa
000204r 1  69 rr        	adc     #>(_game_state)
000206r 1  AA           	tax
000207r 1  98           	tya
000208r 1  8D rr rr     	sta     L0090
00020Br 1  8E rr rr     	stx     L0090+1
00020Er 1               ;
00020Er 1               ; damage_enemy_ptr = e;
00020Er 1               ;
00020Er 1  8D rr rr     	sta     _damage_enemy_ptr
000211r 1  8E rr rr     	stx     _damage_enemy_ptr+1
000214r 1               ;
000214r 1               ; damage_enemy();
000214r 1               ;
000214r 1  20 rr rr     	jsr     _damage_enemy
000217r 1               ;
000217r 1               ; draw_entity_ptr = e;
000217r 1               ;
000217r 1  AD rr rr     	lda     L0090+1
00021Ar 1  8D rr rr     	sta     _draw_entity_ptr+1
00021Dr 1  AD rr rr     	lda     L0090
000220r 1  8D rr rr     	sta     _draw_entity_ptr
000223r 1               ;
000223r 1               ; draw_entity();
000223r 1               ;
000223r 1  20 rr rr     	jsr     _draw_entity
000226r 1               ;
000226r 1               ; for (index=0;index < _countof(game_state.enemies);index++)
000226r 1               ;
000226r 1  EE rr rr     	inc     L008F
000229r 1  4C rr rr     	jmp     L00C5
00022Cr 1               ;
00022Cr 1               ; draw_entity_ptr = &game_state.player.entity;
00022Cr 1               ;
00022Cr 1  A9 rr        L0092:	lda     #>(_game_state+150)
00022Er 1  8D rr rr     	sta     _draw_entity_ptr+1
000231r 1  A9 rr        	lda     #<(_game_state+150)
000233r 1  8D rr rr     	sta     _draw_entity_ptr
000236r 1               ;
000236r 1               ; draw_entity();
000236r 1               ;
000236r 1  4C rr rr     	jmp     _draw_entity
000239r 1               
000239r 1               .endproc
000239r 1               
000239r 1               ; ---------------------------------------------------------------
000239r 1               ; void __near__ main (void)
000239r 1               ; ---------------------------------------------------------------
000239r 1               
000239r 1               .segment	"CODE"
000239r 1               
000239r 1               .proc	_main: near
000239r 1               
000239r 1               .segment	"BSS"
0000AFr 1               
0000AFr 1               L00AA:
0000AFr 1  00           	.res	1,$00
0000B0r 1               
0000B0r 1               .segment	"CODE"
000239r 1               
000239r 1               ;
000239r 1               ; screen_ptr = OS.savmsc;
000239r 1               ;
000239r 1  A5 59        	lda     $0058+1
00023Br 1  8D rr rr     	sta     _screen_ptr+1
00023Er 1  A5 58        	lda     $0058
000240r 1  8D rr rr     	sta     _screen_ptr
000243r 1               ;
000243r 1               ; set_entities();
000243r 1               ;
000243r 1  20 rr rr     	jsr     _set_entities
000246r 1               ;
000246r 1               ; start_benchmark();
000246r 1               ;
000246r 1  20 rr rr     	jsr     _start_benchmark
000249r 1               ;
000249r 1               ; for (times = 0; times < 100; ++times)
000249r 1               ;
000249r 1  A9 00        	lda     #$00
00024Br 1  8D rr rr     	sta     L00AA
00024Er 1  AD rr rr     L00C7:	lda     L00AA
000251r 1  C9 64        	cmp     #$64
000253r 1  B0 09        	bcs     L00B1
000255r 1               ;
000255r 1               ; one_frame();
000255r 1               ;
000255r 1  20 rr rr     	jsr     _one_frame
000258r 1               ;
000258r 1               ; for (times = 0; times < 100; ++times)
000258r 1               ;
000258r 1  EE rr rr     	inc     L00AA
00025Br 1  4C rr rr     	jmp     L00C7
00025Er 1               ;
00025Er 1               ; end_benchmark();
00025Er 1               ;
00025Er 1  20 rr rr     L00B1:	jsr     _end_benchmark
000261r 1               ;
000261r 1               ; for(;;);
000261r 1               ;
000261r 1  4C rr rr     L00BC:	jmp     L00BC
000264r 1               
000264r 1               .endproc
000264r 1               
000264r 1               
